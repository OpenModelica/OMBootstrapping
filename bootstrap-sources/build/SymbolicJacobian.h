#ifndef SymbolicJacobian__H
#define SymbolicJacobian__H
#include "meta/meta_modelica.h"
#include "util/modelica.h"
#include <stdio.h>
#include <stdlib.h>
#include <errno.h>

#ifdef __cplusplus
extern "C" {
#endif

extern struct record_description Absyn_Path_IDENT__desc;

extern struct record_description AvlSetPath_Tree_EMPTY__desc;

extern struct record_description BackendDAE_BackendDAE_DAE__desc;

extern struct record_description BackendDAE_BackendDAEType_ALGEQSYSTEM__desc;

extern struct record_description BackendDAE_BackendDAEType_JACOBIAN__desc;

extern struct record_description BackendDAE_BaseClockPartitionKind_UNKNOWN__PARTITION__desc;

extern struct record_description BackendDAE_DifferentiateInputData_DIFFINPUTDATA__desc;

extern struct record_description BackendDAE_DifferentiationType_GENERIC__GRADIENT__desc;

extern struct record_description BackendDAE_Equation_EQUATION__desc;

extern struct record_description BackendDAE_Equation_RESIDUAL__EQUATION__desc;

extern struct record_description BackendDAE_EquationAttributes_EQUATION__ATTRIBUTES__desc;

extern struct record_description BackendDAE_EquationConstraints_EXACT__desc;

extern struct record_description BackendDAE_EquationKind_BINDING__EQUATION__desc;

extern struct record_description BackendDAE_EquationKind_DYNAMIC__EQUATION__desc;

extern struct record_description BackendDAE_EquationKind_UNKNOWN__EQUATION__KIND__desc;

extern struct record_description BackendDAE_EvaluationStages_EVALUATION__STAGES__desc;

extern struct record_description BackendDAE_IndexReduction_NO__INDEX__REDUCTION__desc;

extern struct record_description BackendDAE_IndexType_SOLVABLE__desc;

extern struct record_description BackendDAE_IndexType_SPARSE__desc;

extern struct record_description BackendDAE_Jacobian_EMPTY__JACOBIAN__desc;

extern struct record_description BackendDAE_Jacobian_GENERIC__JACOBIAN__desc;

extern struct record_description BackendDAE_JacobianType_JAC__CONSTANT__desc;

extern struct record_description BackendDAE_JacobianType_JAC__GENERIC__desc;

extern struct record_description BackendDAE_JacobianType_JAC__LINEAR__desc;

extern struct record_description BackendDAE_JacobianType_JAC__NONLINEAR__desc;

extern struct record_description BackendDAE_JacobianType_JAC__NO__ANALYTIC__desc;

extern struct record_description BackendDAE_Matching_MATCHING__desc;

extern struct record_description BackendDAE_StateSet_STATESET__desc;

extern struct record_description BackendDAE_StrongComponent_EQUATIONSYSTEM__desc;

extern struct record_description BackendDAE_StrongComponent_TORNSYSTEM__desc;

extern struct record_description BackendDAE_TearingSet_TEARINGSET__desc;

extern struct record_description BackendDAE_Var_VAR__desc;

extern struct record_description BackendDAE_VarKind_STATE__DER__desc;

extern struct record_description BackendDAE_VarKind_VARIABLE__desc;

extern struct record_description DAE_CallAttributes_CALL__ATTR__desc;

extern struct record_description DAE_ComponentPrefix_NOCOMPPRE__desc;

extern struct record_description DAE_ComponentRef_CREF__IDENT__desc;

extern struct record_description DAE_ComponentRef_CREF__QUAL__desc;

extern struct record_description DAE_ConnectorType_NON__CONNECTOR__desc;

extern struct record_description DAE_ElementSource_SOURCE__desc;

extern struct record_description DAE_Exp_BCONST__desc;

extern struct record_description DAE_Exp_BINARY__desc;

extern struct record_description DAE_Exp_CALL__desc;

extern struct record_description DAE_Exp_ICONST__desc;

extern struct record_description DAE_Exp_IFEXP__desc;

extern struct record_description DAE_Exp_RCONST__desc;

extern struct record_description DAE_InlineType_NO__INLINE__desc;

extern struct record_description DAE_Operator_ADD__desc;

extern struct record_description DAE_Operator_MUL__desc;

extern struct record_description DAE_Operator_SUB__desc;

extern struct record_description DAE_SymbolicOperation_LINEAR__SOLVED__desc;

extern struct record_description DAE_TailCall_NO__TAIL__desc;

extern struct record_description DAE_Type_T__REAL__desc;

extern struct record_description DAE_Type_T__UNKNOWN__desc;

extern struct record_description DAE_VarDirection_INPUT__desc;

extern struct record_description DAE_VarInnerOuter_NOT__INNER__OUTER__desc;

extern struct record_description DAE_VarParallelism_NON__PARALLEL__desc;

extern struct record_description ErrorTypes_Message_MESSAGE__desc;

extern struct record_description ErrorTypes_MessageType_SYMBOLIC__desc;

extern struct record_description ErrorTypes_MessageType_TRANSLATION__desc;

extern struct record_description ErrorTypes_Severity_ERROR__desc;

extern struct record_description ErrorTypes_Severity_WARNING__desc;

extern struct record_description Flags_ConfigFlag_CONFIG__FLAG__desc;

extern struct record_description Flags_DebugFlag_DEBUG__FLAG__desc;

extern struct record_description Flags_FlagData_BOOL__FLAG__desc;

extern struct record_description Flags_FlagData_STRING__FLAG__desc;

extern struct record_description Flags_FlagVisibility_EXTERNAL__desc;

extern struct record_description Flags_ValidOptions_STRING__DESC__OPTION__desc;

extern struct record_description Gettext_TranslatableContent_gettext__desc;

extern struct record_description SourceInfo_SOURCEINFO__desc;

extern struct record_description SymbolicJacobian_LinearJacobian_LINEAR__REAL__JACOBIAN__desc;


DLLDirection
modelica_boolean omc_SymbolicJacobian_LinearJacobian_anyChanges(threadData_t *threadData, modelica_metatype _linJac);
DLLDirection
modelica_metatype boxptr_SymbolicJacobian_LinearJacobian_anyChanges(threadData_t *threadData, modelica_metatype _linJac);
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_LinearJacobian_anyChanges,2,0) {(void*) boxptr_SymbolicJacobian_LinearJacobian_anyChanges,0}};
#define boxvar_SymbolicJacobian_LinearJacobian_anyChanges MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_LinearJacobian_anyChanges)


#define boxptr_SymbolicJacobian_LinearJacobian_generateLHSfromList omc_SymbolicJacobian_LinearJacobian_generateLHSfromList


DLLDirection
modelica_metatype omc_SymbolicJacobian_LinearJacobian_resolveASSC(threadData_t *threadData, modelica_metatype _linJac, modelica_metatype __omcQ_24in_5Fass1, modelica_metatype __omcQ_24in_5Fass2, modelica_metatype __omcQ_24in_5Fsyst, modelica_boolean _init, modelica_metatype *out_ass2, modelica_metatype *out_syst);
DLLDirection
modelica_metatype boxptr_SymbolicJacobian_LinearJacobian_resolveASSC(threadData_t *threadData, modelica_metatype _linJac, modelica_metatype __omcQ_24in_5Fass1, modelica_metatype __omcQ_24in_5Fass2, modelica_metatype __omcQ_24in_5Fsyst, modelica_metatype _init, modelica_metatype *out_ass2, modelica_metatype *out_syst);
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_LinearJacobian_resolveASSC,2,0) {(void*) boxptr_SymbolicJacobian_LinearJacobian_resolveASSC,0}};
#define boxvar_SymbolicJacobian_LinearJacobian_resolveASSC MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_LinearJacobian_resolveASSC)


#define boxptr_SymbolicJacobian_LinearJacobian_getPivot omc_SymbolicJacobian_LinearJacobian_getPivot


DLLDirection
void omc_SymbolicJacobian_LinearJacobian_updatePivotRow(threadData_t *threadData, modelica_metatype _pivot_row, modelica_real _piv_value);
DLLDirection
void boxptr_SymbolicJacobian_LinearJacobian_updatePivotRow(threadData_t *threadData, modelica_metatype _pivot_row, modelica_metatype _piv_value);
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_LinearJacobian_updatePivotRow,2,0) {(void*) boxptr_SymbolicJacobian_LinearJacobian_updatePivotRow,0}};
#define boxvar_SymbolicJacobian_LinearJacobian_updatePivotRow MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_LinearJacobian_updatePivotRow)


DLLDirection
void omc_SymbolicJacobian_LinearJacobian_solveRow(threadData_t *threadData, modelica_metatype _pivot_row, modelica_metatype _row, modelica_real _piv_value, modelica_real _row_value);
DLLDirection
void boxptr_SymbolicJacobian_LinearJacobian_solveRow(threadData_t *threadData, modelica_metatype _pivot_row, modelica_metatype _row, modelica_metatype _piv_value, modelica_metatype _row_value);
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_LinearJacobian_solveRow,2,0) {(void*) boxptr_SymbolicJacobian_LinearJacobian_solveRow,0}};
#define boxvar_SymbolicJacobian_LinearJacobian_solveRow MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_LinearJacobian_solveRow)


DLLDirection
modelica_metatype omc_SymbolicJacobian_LinearJacobian_solve(threadData_t *threadData, modelica_metatype __omcQ_24in_5FlinJac);
#define boxptr_SymbolicJacobian_LinearJacobian_solve omc_SymbolicJacobian_LinearJacobian_solve
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_LinearJacobian_solve,2,0) {(void*) boxptr_SymbolicJacobian_LinearJacobian_solve,0}};
#define boxvar_SymbolicJacobian_LinearJacobian_solve MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_LinearJacobian_solve)


DLLDirection
modelica_boolean omc_SymbolicJacobian_LinearJacobian_emptyOrSingle(threadData_t *threadData, modelica_metatype _linJac);
DLLDirection
modelica_metatype boxptr_SymbolicJacobian_LinearJacobian_emptyOrSingle(threadData_t *threadData, modelica_metatype _linJac);
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_LinearJacobian_emptyOrSingle,2,0) {(void*) boxptr_SymbolicJacobian_LinearJacobian_emptyOrSingle,0}};
#define boxvar_SymbolicJacobian_LinearJacobian_emptyOrSingle MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_LinearJacobian_emptyOrSingle)


DLLDirection
modelica_metatype omc_SymbolicJacobian_LinearJacobian_generate(threadData_t *threadData, modelica_metatype _loopEqs, modelica_metatype _loopVars, modelica_metatype _ass1);
#define boxptr_SymbolicJacobian_LinearJacobian_generate omc_SymbolicJacobian_LinearJacobian_generate
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_LinearJacobian_generate,2,0) {(void*) boxptr_SymbolicJacobian_LinearJacobian_generate,0}};
#define boxvar_SymbolicJacobian_LinearJacobian_generate MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_LinearJacobian_generate)


DLLDirection
modelica_string omc_SymbolicJacobian_LinearJacobian_toString(threadData_t *threadData, modelica_metatype _linJac, modelica_string _heading);
#define boxptr_SymbolicJacobian_LinearJacobian_toString omc_SymbolicJacobian_LinearJacobian_toString
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_LinearJacobian_toString,2,0) {(void*) boxptr_SymbolicJacobian_LinearJacobian_toString,0}};
#define boxvar_SymbolicJacobian_LinearJacobian_toString MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_LinearJacobian_toString)


#define boxptr_SymbolicJacobian_stripPartialDer omc_SymbolicJacobian_stripPartialDer


#define boxptr_SymbolicJacobian_stripPartialDerNonlinearPattern omc_SymbolicJacobian_stripPartialDerNonlinearPattern


#define boxptr_SymbolicJacobian_getNonlinearStateCount0 omc_SymbolicJacobian_getNonlinearStateCount0


#define boxptr_SymbolicJacobian_getNonlinearStateCount omc_SymbolicJacobian_getNonlinearStateCount


DLLDirection
modelica_metatype omc_SymbolicJacobian_getFixedStatesForSelfdependentSets(threadData_t *threadData, modelica_metatype _stateSet, modelica_metatype _unfixedStates, modelica_integer _toFix);
DLLDirection
modelica_metatype boxptr_SymbolicJacobian_getFixedStatesForSelfdependentSets(threadData_t *threadData, modelica_metatype _stateSet, modelica_metatype _unfixedStates, modelica_metatype _toFix);
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_getFixedStatesForSelfdependentSets,2,0) {(void*) boxptr_SymbolicJacobian_getFixedStatesForSelfdependentSets,0}};
#define boxvar_SymbolicJacobian_getFixedStatesForSelfdependentSets MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_getFixedStatesForSelfdependentSets)


#define boxptr_SymbolicJacobian_checkForNonLinearStrongComponents__work omc_SymbolicJacobian_checkForNonLinearStrongComponents__work


#define boxptr_SymbolicJacobian_getJacobianResiduals omc_SymbolicJacobian_getJacobianResiduals


DLLDirection
modelica_boolean omc_SymbolicJacobian_isJacobianGeneric(threadData_t *threadData, modelica_metatype _inJac);
DLLDirection
modelica_metatype boxptr_SymbolicJacobian_isJacobianGeneric(threadData_t *threadData, modelica_metatype _inJac);
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_isJacobianGeneric,2,0) {(void*) boxptr_SymbolicJacobian_isJacobianGeneric,0}};
#define boxvar_SymbolicJacobian_isJacobianGeneric MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_isJacobianGeneric)


DLLDirection
modelica_metatype omc_SymbolicJacobian_analyzeJacobian(threadData_t *threadData, modelica_metatype _vars, modelica_metatype _eqns, modelica_metatype _inTplIntegerIntegerEquationLstOption, modelica_boolean *out_jacConstant);
DLLDirection
modelica_metatype boxptr_SymbolicJacobian_analyzeJacobian(threadData_t *threadData, modelica_metatype _vars, modelica_metatype _eqns, modelica_metatype _inTplIntegerIntegerEquationLstOption, modelica_metatype *out_jacConstant);
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_analyzeJacobian,2,0) {(void*) boxptr_SymbolicJacobian_analyzeJacobian,0}};
#define boxvar_SymbolicJacobian_analyzeJacobian MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_analyzeJacobian)


#define boxptr_SymbolicJacobian_addBackendDAESharedJacobian omc_SymbolicJacobian_addBackendDAESharedJacobian


DLLDirection
modelica_metatype omc_SymbolicJacobian_calculateJacobian(threadData_t *threadData, modelica_metatype _inVariables, modelica_metatype _inEquationArray, modelica_metatype _inAdjacencyMatrix, modelica_boolean _differentiateIfExp, modelica_metatype _iShared, modelica_metatype *out_oShared);
DLLDirection
modelica_metatype boxptr_SymbolicJacobian_calculateJacobian(threadData_t *threadData, modelica_metatype _inVariables, modelica_metatype _inEquationArray, modelica_metatype _inAdjacencyMatrix, modelica_metatype _differentiateIfExp, modelica_metatype _iShared, modelica_metatype *out_oShared);
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_calculateJacobian,2,0) {(void*) boxptr_SymbolicJacobian_calculateJacobian,0}};
#define boxvar_SymbolicJacobian_calculateJacobian MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_calculateJacobian)


#define boxptr_SymbolicJacobian_getStateSetCompVarEqns omc_SymbolicJacobian_getStateSetCompVarEqns


#define boxptr_SymbolicJacobian_markSetStates omc_SymbolicJacobian_markSetStates


#define boxptr_SymbolicJacobian_calculateStateSetJacobian omc_SymbolicJacobian_calculateStateSetJacobian


#define boxptr_SymbolicJacobian_calculateStateSetsJacobian omc_SymbolicJacobian_calculateStateSetsJacobian


#define boxptr_SymbolicJacobian_calculateEqSystemStateSetsJacobians omc_SymbolicJacobian_calculateEqSystemStateSetsJacobians


DLLDirection
modelica_boolean omc_SymbolicJacobian_hasGenericSymbolicJacobian(threadData_t *threadData, modelica_metatype _inJacobian);
DLLDirection
modelica_metatype boxptr_SymbolicJacobian_hasGenericSymbolicJacobian(threadData_t *threadData, modelica_metatype _inJacobian);
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_hasGenericSymbolicJacobian,2,0) {(void*) boxptr_SymbolicJacobian_hasGenericSymbolicJacobian,0}};
#define boxvar_SymbolicJacobian_hasGenericSymbolicJacobian MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_hasGenericSymbolicJacobian)


DLLDirection
modelica_metatype omc_SymbolicJacobian_getSymbolicJacobian(threadData_t *threadData, modelica_metatype _inDiffVars, modelica_metatype _inResEquations, modelica_metatype _inResVars, modelica_metatype _inotherEquations, modelica_metatype _inotherVars, modelica_metatype _inShared, modelica_metatype _inAllVars, modelica_string _inName, modelica_boolean _inOnlySparsePattern, modelica_metatype *out_outShared);
DLLDirection
modelica_metatype boxptr_SymbolicJacobian_getSymbolicJacobian(threadData_t *threadData, modelica_metatype _inDiffVars, modelica_metatype _inResEquations, modelica_metatype _inResVars, modelica_metatype _inotherEquations, modelica_metatype _inotherVars, modelica_metatype _inShared, modelica_metatype _inAllVars, modelica_metatype _inName, modelica_metatype _inOnlySparsePattern, modelica_metatype *out_outShared);
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_getSymbolicJacobian,2,0) {(void*) boxptr_SymbolicJacobian_getSymbolicJacobian,0}};
#define boxvar_SymbolicJacobian_getSymbolicJacobian MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_getSymbolicJacobian)


DLLDirection
modelica_metatype omc_SymbolicJacobian_getNonLinearVariables(threadData_t *threadData, modelica_metatype _jacobian);
#define boxptr_SymbolicJacobian_getNonLinearVariables omc_SymbolicJacobian_getNonLinearVariables
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_getNonLinearVariables,2,0) {(void*) boxptr_SymbolicJacobian_getNonLinearVariables,0}};
#define boxvar_SymbolicJacobian_getNonLinearVariables MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_getNonLinearVariables)


#define boxptr_SymbolicJacobian_printNonLinIterVarsAndEqs omc_SymbolicJacobian_printNonLinIterVarsAndEqs


#define boxptr_SymbolicJacobian_checkNonLinDependecies omc_SymbolicJacobian_checkNonLinDependecies


#define boxptr_SymbolicJacobian_calculateJacobianComponent omc_SymbolicJacobian_calculateJacobianComponent


DLLDirection
modelica_metatype omc_SymbolicJacobian_prepareTornStrongComponentData(threadData_t *threadData, modelica_metatype _inVars, modelica_metatype _inEqns, modelica_metatype _inIterationvarsInts, modelica_metatype _inResidualequations, modelica_metatype _innerEquations, modelica_metatype _funcTree, modelica_string _name, modelica_metatype *out_outResidualVars, modelica_metatype *out_outOtherVars, modelica_metatype *out_outResidualEqns, modelica_metatype *out_outOtherEqns);
#define boxptr_SymbolicJacobian_prepareTornStrongComponentData omc_SymbolicJacobian_prepareTornStrongComponentData
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_prepareTornStrongComponentData,2,0) {(void*) boxptr_SymbolicJacobian_prepareTornStrongComponentData,0}};
#define boxvar_SymbolicJacobian_prepareTornStrongComponentData MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_prepareTornStrongComponentData)


#define boxptr_SymbolicJacobian_calculateJacobiansComponents omc_SymbolicJacobian_calculateJacobiansComponents


#define boxptr_SymbolicJacobian_calculateEqSystemJacobians omc_SymbolicJacobian_calculateEqSystemJacobians


DLLDirection
modelica_metatype omc_SymbolicJacobian_getJacobianDependencies(threadData_t *threadData, modelica_metatype _jacobian);
#define boxptr_SymbolicJacobian_getJacobianDependencies omc_SymbolicJacobian_getJacobianDependencies
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_getJacobianDependencies,2,0) {(void*) boxptr_SymbolicJacobian_getJacobianDependencies,0}};
#define boxvar_SymbolicJacobian_getJacobianDependencies MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_getJacobianDependencies)


DLLDirection
modelica_metatype omc_SymbolicJacobian_calcJacobianDependencies(threadData_t *threadData, modelica_metatype _jacobian);
#define boxptr_SymbolicJacobian_calcJacobianDependencies omc_SymbolicJacobian_calcJacobianDependencies
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_calcJacobianDependencies,2,0) {(void*) boxptr_SymbolicJacobian_calcJacobianDependencies,0}};
#define boxvar_SymbolicJacobian_calcJacobianDependencies MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_calcJacobianDependencies)


DLLDirection
modelica_metatype omc_SymbolicJacobian_updateJacobianDependencies(threadData_t *threadData, modelica_metatype __omcQ_24in_5Fjacobian);
#define boxptr_SymbolicJacobian_updateJacobianDependencies omc_SymbolicJacobian_updateJacobianDependencies
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_updateJacobianDependencies,2,0) {(void*) boxptr_SymbolicJacobian_updateJacobianDependencies,0}};
#define boxvar_SymbolicJacobian_updateJacobianDependencies MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_updateJacobianDependencies)


DLLDirection
modelica_metatype omc_SymbolicJacobian_getJacobianMatrixbyName(threadData_t *threadData, modelica_metatype _injacobianMatrices, modelica_string _inJacobianName);
#define boxptr_SymbolicJacobian_getJacobianMatrixbyName omc_SymbolicJacobian_getJacobianMatrixbyName
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_getJacobianMatrixbyName,2,0) {(void*) boxptr_SymbolicJacobian_getJacobianMatrixbyName,0}};
#define boxvar_SymbolicJacobian_getJacobianMatrixbyName MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_getJacobianMatrixbyName)


#define boxptr_SymbolicJacobian_createAllDiffedVars omc_SymbolicJacobian_createAllDiffedVars


DLLDirection
modelica_metatype omc_SymbolicJacobian_createSeedVars(threadData_t *threadData, modelica_metatype _indiffVar, modelica_string _inMatrixName);
#define boxptr_SymbolicJacobian_createSeedVars omc_SymbolicJacobian_createSeedVars
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_createSeedVars,2,0) {(void*) boxptr_SymbolicJacobian_createSeedVars,0}};
#define boxvar_SymbolicJacobian_createSeedVars MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_createSeedVars)


#define boxptr_SymbolicJacobian_optimizeJacobianMatrix omc_SymbolicJacobian_optimizeJacobianMatrix


DLLDirection
modelica_metatype omc_SymbolicJacobian_createFMIModelDerivativesForInitialization(threadData_t *threadData, modelica_metatype _initDAE, modelica_metatype _simDAE, modelica_metatype _depVars, modelica_metatype _indepVars, modelica_metatype _orderedVars, modelica_metatype _sparsePattern_, modelica_metatype _sparseColoring_);
#define boxptr_SymbolicJacobian_createFMIModelDerivativesForInitialization omc_SymbolicJacobian_createFMIModelDerivativesForInitialization
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_createFMIModelDerivativesForInitialization,2,0) {(void*) boxptr_SymbolicJacobian_createFMIModelDerivativesForInitialization,0}};
#define boxvar_SymbolicJacobian_createFMIModelDerivativesForInitialization MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_createFMIModelDerivativesForInitialization)


DLLDirection
modelica_metatype omc_SymbolicJacobian_createFMIModelDerivatives(threadData_t *threadData, modelica_metatype _inBackendDAE, modelica_metatype *out_outFunctionTree);
#define boxptr_SymbolicJacobian_createFMIModelDerivatives omc_SymbolicJacobian_createFMIModelDerivatives
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_createFMIModelDerivatives,2,0) {(void*) boxptr_SymbolicJacobian_createFMIModelDerivatives,0}};
#define boxvar_SymbolicJacobian_createFMIModelDerivatives MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_createFMIModelDerivatives)


DLLDirection
modelica_metatype omc_SymbolicJacobian_transposeSparsePatternTuple(threadData_t *threadData, modelica_metatype _inSparsePattern, modelica_metatype _inAccumList);
#define boxptr_SymbolicJacobian_transposeSparsePatternTuple omc_SymbolicJacobian_transposeSparsePatternTuple
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_transposeSparsePatternTuple,2,0) {(void*) boxptr_SymbolicJacobian_transposeSparsePatternTuple,0}};
#define boxvar_SymbolicJacobian_transposeSparsePatternTuple MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_transposeSparsePatternTuple)


DLLDirection
modelica_metatype omc_SymbolicJacobian_transposeSparsePattern(threadData_t *threadData, modelica_metatype _inSparsePattern, modelica_metatype _inAccumList, modelica_integer _inValue);
DLLDirection
modelica_metatype boxptr_SymbolicJacobian_transposeSparsePattern(threadData_t *threadData, modelica_metatype _inSparsePattern, modelica_metatype _inAccumList, modelica_metatype _inValue);
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_transposeSparsePattern,2,0) {(void*) boxptr_SymbolicJacobian_transposeSparsePattern,0}};
#define boxvar_SymbolicJacobian_transposeSparsePattern MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_transposeSparsePattern)


DLLDirection
modelica_metatype omc_SymbolicJacobian_createColoring(threadData_t *threadData, modelica_metatype _sparseArray, modelica_metatype _sparseArrayT, modelica_integer _sizeVars, modelica_integer _sizeVarswithDep);
DLLDirection
modelica_metatype boxptr_SymbolicJacobian_createColoring(threadData_t *threadData, modelica_metatype _sparseArray, modelica_metatype _sparseArrayT, modelica_metatype _sizeVars, modelica_metatype _sizeVarswithDep);
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_createColoring,2,0) {(void*) boxptr_SymbolicJacobian_createColoring,0}};
#define boxvar_SymbolicJacobian_createColoring MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_createColoring)


DLLDirection
modelica_metatype omc_SymbolicJacobian_generateSparsePattern(threadData_t *threadData, modelica_metatype _inBackendDAE, modelica_metatype _inIndependentVars, modelica_metatype _inDependentVars, modelica_boolean _nonlinearPattern, modelica_metatype *out_outColoredCols);
DLLDirection
modelica_metatype boxptr_SymbolicJacobian_generateSparsePattern(threadData_t *threadData, modelica_metatype _inBackendDAE, modelica_metatype _inIndependentVars, modelica_metatype _inDependentVars, modelica_metatype _nonlinearPattern, modelica_metatype *out_outColoredCols);
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_generateSparsePattern,2,0) {(void*) boxptr_SymbolicJacobian_generateSparsePattern,0}};
#define boxvar_SymbolicJacobian_generateSparsePattern MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_generateSparsePattern)


#define boxptr_SymbolicJacobian_evaluateConstantJacobian2 omc_SymbolicJacobian_evaluateConstantJacobian2


DLLDirection
modelica_metatype omc_SymbolicJacobian_evaluateConstantJacobian(threadData_t *threadData, modelica_integer _size, modelica_metatype _jac);
DLLDirection
modelica_metatype boxptr_SymbolicJacobian_evaluateConstantJacobian(threadData_t *threadData, modelica_metatype _size, modelica_metatype _jac);
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_evaluateConstantJacobian,2,0) {(void*) boxptr_SymbolicJacobian_evaluateConstantJacobian,0}};
#define boxvar_SymbolicJacobian_evaluateConstantJacobian MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_evaluateConstantJacobian)


#define boxptr_SymbolicJacobian_changeConstantLinearSystemVars omc_SymbolicJacobian_changeConstantLinearSystemVars


#define boxptr_SymbolicJacobian_solveLinearSystem omc_SymbolicJacobian_solveLinearSystem


#define boxptr_SymbolicJacobian_constantLinearSystem0 omc_SymbolicJacobian_constantLinearSystem0


#define boxptr_SymbolicJacobian_rListStr omc_SymbolicJacobian_rListStr


DLLDirection
modelica_metatype omc_SymbolicJacobian_makeBinaryExp(threadData_t *threadData, modelica_metatype _inLhs, modelica_metatype _inRhs, modelica_metatype _inOp);
#define boxptr_SymbolicJacobian_makeBinaryExp omc_SymbolicJacobian_makeBinaryExp
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_makeBinaryExp,2,0) {(void*) boxptr_SymbolicJacobian_makeBinaryExp,0}};
#define boxvar_SymbolicJacobian_makeBinaryExp MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_makeBinaryExp)


#define boxptr_SymbolicJacobian_updateAssignment omc_SymbolicJacobian_updateAssignment


#define boxptr_SymbolicJacobian_traverserinputDerivativesUsed omc_SymbolicJacobian_traverserinputDerivativesUsed


DLLDirection
modelica_metatype omc_SymbolicJacobian_inputDerivativesUsed(threadData_t *threadData, modelica_metatype _inDAE);
#define boxptr_SymbolicJacobian_inputDerivativesUsed omc_SymbolicJacobian_inputDerivativesUsed
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_inputDerivativesUsed,2,0) {(void*) boxptr_SymbolicJacobian_inputDerivativesUsed,0}};
#define boxvar_SymbolicJacobian_inputDerivativesUsed MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_inputDerivativesUsed)


DLLDirection
modelica_metatype omc_SymbolicJacobian_generateSymbolicLinearizationPast(threadData_t *threadData, modelica_metatype _inBackendDAE);
#define boxptr_SymbolicJacobian_generateSymbolicLinearizationPast omc_SymbolicJacobian_generateSymbolicLinearizationPast
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_generateSymbolicLinearizationPast,2,0) {(void*) boxptr_SymbolicJacobian_generateSymbolicLinearizationPast,0}};
#define boxvar_SymbolicJacobian_generateSymbolicLinearizationPast MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_generateSymbolicLinearizationPast)


#define boxptr_SymbolicJacobian_createSymbolicJacobianforParameters omc_SymbolicJacobian_createSymbolicJacobianforParameters


DLLDirection
modelica_metatype omc_SymbolicJacobian_generateSymbolicSensitivities(threadData_t *threadData, modelica_metatype _inBackendDAE);
#define boxptr_SymbolicJacobian_generateSymbolicSensitivities omc_SymbolicJacobian_generateSymbolicSensitivities
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_generateSymbolicSensitivities,2,0) {(void*) boxptr_SymbolicJacobian_generateSymbolicSensitivities,0}};
#define boxvar_SymbolicJacobian_generateSymbolicSensitivities MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_generateSymbolicSensitivities)


#define boxptr_SymbolicJacobian_createSymbolicJacobianforStates omc_SymbolicJacobian_createSymbolicJacobianforStates


#define boxptr_SymbolicJacobian_generateSymbolicJacobianPast omc_SymbolicJacobian_generateSymbolicJacobianPast


DLLDirection
modelica_metatype omc_SymbolicJacobian_symbolicJacobianDAE(threadData_t *threadData, modelica_metatype _inBackendDAE);
#define boxptr_SymbolicJacobian_symbolicJacobianDAE omc_SymbolicJacobian_symbolicJacobianDAE
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_symbolicJacobianDAE,2,0) {(void*) boxptr_SymbolicJacobian_symbolicJacobianDAE,0}};
#define boxvar_SymbolicJacobian_symbolicJacobianDAE MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_symbolicJacobianDAE)


#define boxptr_SymbolicJacobian_detectSparsePatternODE omc_SymbolicJacobian_detectSparsePatternODE


DLLDirection
modelica_metatype omc_SymbolicJacobian_constantLinearSystem(threadData_t *threadData, modelica_metatype _inDAE);
#define boxptr_SymbolicJacobian_constantLinearSystem omc_SymbolicJacobian_constantLinearSystem
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_constantLinearSystem,2,0) {(void*) boxptr_SymbolicJacobian_constantLinearSystem,0}};
#define boxvar_SymbolicJacobian_constantLinearSystem MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_constantLinearSystem)


DLLDirection
modelica_metatype omc_SymbolicJacobian_calculateStrongComponentJacobians(threadData_t *threadData, modelica_metatype _inDAE);
#define boxptr_SymbolicJacobian_calculateStrongComponentJacobians omc_SymbolicJacobian_calculateStrongComponentJacobians
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_calculateStrongComponentJacobians,2,0) {(void*) boxptr_SymbolicJacobian_calculateStrongComponentJacobians,0}};
#define boxvar_SymbolicJacobian_calculateStrongComponentJacobians MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_calculateStrongComponentJacobians)


DLLDirection
modelica_metatype omc_SymbolicJacobian_calculateStateSetsJacobians(threadData_t *threadData, modelica_metatype _inDAE);
#define boxptr_SymbolicJacobian_calculateStateSetsJacobians omc_SymbolicJacobian_calculateStateSetsJacobians
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_calculateStateSetsJacobians,2,0) {(void*) boxptr_SymbolicJacobian_calculateStateSetsJacobians,0}};
#define boxvar_SymbolicJacobian_calculateStateSetsJacobians MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_calculateStateSetsJacobians)


DLLDirection
modelica_metatype omc_SymbolicJacobian_symbolicJacobian(threadData_t *threadData, modelica_metatype _inDAE);
#define boxptr_SymbolicJacobian_symbolicJacobian omc_SymbolicJacobian_symbolicJacobian
static const MMC_DEFSTRUCTLIT(boxvar_lit_SymbolicJacobian_symbolicJacobian,2,0) {(void*) boxptr_SymbolicJacobian_symbolicJacobian,0}};
#define boxvar_SymbolicJacobian_symbolicJacobian MMC_REFSTRUCTLIT(boxvar_lit_SymbolicJacobian_symbolicJacobian)

#ifdef __cplusplus
}
#endif
#endif
