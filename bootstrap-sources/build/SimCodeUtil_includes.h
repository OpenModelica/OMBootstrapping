#ifdef __cplusplus
extern "C" {
#endif
#include "openmodelica.h"       // Defines OPENMODELICA_H_ for libraris to test if called from OpenModelica.
#include "ModelicaUtilities.h"  // Make Modelica C util functions available for external includes.

#include "AbsynUtil.h"
#include "Array.h"
#include "AvlSetString.h"
#include "AvlTreeCRToInt.h"
#include "BackendDAEOptimize.h"
#include "BackendDAETransform.h"
#include "BackendDAEUtil.h"
#include "BackendDump.h"
#include "BackendEquation.h"
#include "BackendVarTransform.h"
#include "BackendVariable.h"
#include "BaseHashSet.h"
#include "BaseHashTable.h"
#include "Builtin.h"
#include "Ceval.h"
#include "CheckModel.h"
#include "ComponentReference.h"
#include "Config.h"
#include "DAEDump.h"
#include "DAEUtil.h"
#include "Debug.h"
#include "Differentiate.h"
#include "DoubleEnded.h"
#include "ElementSource.h"
#include "Error.h"
#include "ExecStat.h"
#include "Expression.h"
#include "ExpressionDump.h"
#include "ExpressionSimplify.h"
#include "ExpressionSolve.h"
#include "FCore.h"
#include "FGraph.h"
#include "FMI.h"
#include "File.h"
#include "Flags.h"
#include "FlagsUtil.h"
#include "GCExt.h"
#include "HashSet.h"
#include "HashSetExp.h"
#include "HashSetString.h"
#include "HashTable.h"
#include "HashTableCrIListArray.h"
#include "HashTableCrILst.h"
#include "HashTableCrefSimVar.h"
#include "HashTableExpToIndex.h"
#include "HashTableSimCodeEqCache.h"
#include "Inline.h"
#include "Interactive.h"
#include "InteractiveUtil.h"
#include "List.h"
#include "Matching.h"
#include "Mutable.h"
#include "NFUnit.h"
#include "PriorityQueue.h"
#include "ReduceDAE.h"
#include "SCodeUtil.h"
#include "SemanticVersion.h"
#include "Settings.h"
#include "SimCodeDump.h"
#include "SimCodeFunctionUtil.h"
#include "SimCodeUtil.h"
#include "Static.h"
#include "StringUtil.h"
#include "SymbolicJacobian.h"
#include "System.h"
#include "Tpl.h"
#include "Types.h"
#include "UnorderedSet.h"
#include "Util.h"
#include "ValuesUtil.h"
#include "VisualXML.h"
#include "ZeroCrossings.h"
#ifdef __cplusplus
}
#endif
